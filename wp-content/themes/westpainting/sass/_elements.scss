html {
	box-sizing: border-box;
}

*,
*:before,
*:after { /* Inherit box-sizing to make it easier to change the property for components that leverage other behavior; see https://css-tricks.com/inheriting-box-sizing-probably-slightly-better-best-practice/ */
	box-sizing: inherit;
}

body {
	background: $color__background-body; /* Fallback for when there is no custom background color defined. */
}

hr {
	background-color: $color__background-hr;
	border: 0;
	height: 1px;
	margin-bottom: 1.5em;
}

img {
	height: auto; /* Make sure images are scaled correctly. */
	max-width: 100%; /* Adhere to container width. */
}

figure {
	margin: 1em 0; /* Extra wide images within figure tags don't overflow the content area. */
}

.ctabtn {
	color: $white;
	text-transform: uppercase;
	font-size: $font__smallest;
	letter-spacing: 1px;
	padding: 25px 30px;
	transition: all .25s ease;

	&:hover, &:visited { 
		padding: 26px 31px;
		color: $white;
	}
	
	&.bluebtn { background-color: $blue; }
	&.yellowbtn { background-color: $yellow; }
}


.estimate-cta { 
	display: flex;
	align-items: center;
	justify-content: space-between;
	padding: 2em 1.5em;

	h2 {
		text-align: left;
		line-height: 1.3em;
		span { 
			margin-top: -.5em;
			font-family: $font__main; 
			font-weight: normal;
			a { font-weight: normal; }
		}
	}
}

div.hero { 
	position: relative;

	.hero-content { 
		position: absolute;
		top: 50%;
		transform: translateY(-50%);
		h1, p { text-align: left; }
		p { margin-bottom: 3em; }
		width: 75%;
		padding: 1em 1em 5em 1em;
	}
}

@media only screen and (max-width: 490px) {
	.estimate-cta { padding: 1em .5em !important; }
	a.ctabtn { padding: 20px 25px; }
}

@media only screen and (max-width: 430px) {
	.estimate-cta { padding: 1em .5em !important; }
	a.ctabtn { padding: 15px 20px; }
}

@media only screen and (max-width: 410px) {
	.estimate-cta h2 { text-align: center !important; }
	a.ctabtn { text-align: center !important; }
}